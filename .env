# Django Settings
DEBUG=False
SECRET_KEY=your-super-secret-key-here-replace-this
DJANGO_SETTINGS_MODULE=your_social_media.settings

# PostgreSQL Database Configuration (as used in docker-compose)
POSTGRES_DB=yourmediadb
POSTGRES_USER=yourmediauser
POSTGRES_PASSWORD=your-strong-postgres-password-replace-this
# POSTGRES_HOST is 'db' (service name in docker-compose), not usually set in .env for this setup
# POSTGRES_PORT is '5432' (default), not usually set in .env for this setup

# Redis Configuration (as used in docker-compose by backend/celery)
REDIS_URL=redis://redis:6379/0 # 'redis' is the service name

# API Keys (Required - Replace placeholders with your actual production keys)
GROQ_API_KEY=your-groq-api-key-replace-this
GOOGLE_API_KEY=your-google-gemini-api-key-replace-this
OPENAI_API_KEY=your-openai-api-key-replace-this-if-used # Optional, can be empty if not used for language detection

# Domain Configuration for Production
DOMAIN_NAME=texts.com.br
# Django settings like ALLOWED_HOSTS, CORS_ALLOWED_ORIGINS, CSRF_TRUSTED_ORIGINS
# are derived in settings.py based on DOMAIN_NAME and DEBUG status.
# You can add overrides here if necessary for specific advanced cases:
# ALLOWED_HOSTS_EXTRA=
# CORS_ALLOWED_ORIGINS_EXTRA=
# CSRF_TRUSTED_ORIGINS_EXTRA=
# CORS_ALLOW_ALL_ORIGINS_DEV=False # Should be False in production

# Frontend Configuration (VITE_API_URL)
# This tells your Vue.js frontend where to find the backend API.
# It's derived from your DOMAIN_NAME.
VITE_API_URL=https://texts.com.br/api

# Port for local docker-compose PORT variable (Coolify manages the actual host port mapping)
# PORT=80 
