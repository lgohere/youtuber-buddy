events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # File upload settings
    client_max_body_size 1024M;  # Allow uploads up to 1GB
    client_body_timeout 300s;    # 5 minutes timeout for uploads
    client_header_timeout 300s;  # 5 minutes timeout for headers
    proxy_read_timeout 300s;     # 5 minutes timeout for proxy
    proxy_connect_timeout 300s;  # 5 minutes timeout for proxy connection
    proxy_send_timeout 300s;     # 5 minutes timeout for proxy send

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Trust Coolify proxy headers
    set_real_ip_from 10.0.0.0/8;
    set_real_ip_from 172.16.0.0/12;
    set_real_ip_from 192.168.0.0/16;
    real_ip_header X-Forwarded-For;
    real_ip_recursive on;

    server {
        listen 80;
        server_name _;
        root /usr/share/nginx/html;
        index index.html;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

        # Handle Vue.js routing (Youtuber Buddy)
        location / {
            try_files $uri $uri/ /index.html;
        }

        # API proxy to backend (Youtuber Buddy API)
        location /api/ {
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_redirect off;
        }

        # Static files from Django
        location /static/ {
            alias /usr/share/nginx/html/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Media files from Django
        location /media/ {
            alias /usr/share/nginx/html/media/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Frontend static files caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Health check for Coolify (Youtuber Buddy)
        location /health {
            access_log off;
            return 200 "Youtuber Buddy is healthy\n";
            add_header Content-Type text/plain;
        }

        # Disable access to hidden files
        location ~ /\. {
            deny all;
        }
    }
} 